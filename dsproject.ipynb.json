{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "data = pd.read_csv (\"/Users/priyadarshanialbuquerque/Dropbox/My Mac (Priyadarshani’s MacBook Air)/Desktop/air_quality_4_boroughs_2020.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Site</th>\n",
       "      <th>NO2</th>\n",
       "      <th>NOX</th>\n",
       "      <th>NO</th>\n",
       "      <th>ReadingDateTime</th>\n",
       "      <th>Since_start_of_year</th>\n",
       "      <th>NO2_rolling_daily_mean</th>\n",
       "      <th>NOX_rolling_daily_mean</th>\n",
       "      <th>NO_rolling_daily_mean</th>\n",
       "      <th>NOX_rolling_daily_std</th>\n",
       "      <th>NO2_rolling_daily_std</th>\n",
       "      <th>NO_rolling_daily_std</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Barking and Dagenham</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>01/01/2020 00:00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Barking and Dagenham</td>\n",
       "      <td>31.8</td>\n",
       "      <td>42.0</td>\n",
       "      <td>6.7</td>\n",
       "      <td>01/01/2020 01:00</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Barking and Dagenham</td>\n",
       "      <td>31.4</td>\n",
       "      <td>47.7</td>\n",
       "      <td>10.6</td>\n",
       "      <td>01/01/2020 02:00</td>\n",
       "      <td>2.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Barking and Dagenham</td>\n",
       "      <td>30.0</td>\n",
       "      <td>51.5</td>\n",
       "      <td>14.1</td>\n",
       "      <td>01/01/2020 03:00</td>\n",
       "      <td>3.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Barking and Dagenham</td>\n",
       "      <td>29.0</td>\n",
       "      <td>50.6</td>\n",
       "      <td>14.1</td>\n",
       "      <td>01/01/2020 04:00</td>\n",
       "      <td>4.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35131</th>\n",
       "      <td>Sutton</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>31/12/2020 19:00</td>\n",
       "      <td>8779.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000009</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35132</th>\n",
       "      <td>Sutton</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>31/12/2020 20:00</td>\n",
       "      <td>8780.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000009</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35133</th>\n",
       "      <td>Sutton</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>31/12/2020 21:00</td>\n",
       "      <td>8781.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000009</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35134</th>\n",
       "      <td>Sutton</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>31/12/2020 22:00</td>\n",
       "      <td>8782.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000009</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35135</th>\n",
       "      <td>Sutton</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>31/12/2020 23:00</td>\n",
       "      <td>8783.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000009</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>35136 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                       Site   NO2   NOX    NO   ReadingDateTime  \\\n",
       "0      Barking and Dagenham   NaN   NaN   NaN  01/01/2020 00:00   \n",
       "1      Barking and Dagenham  31.8  42.0   6.7  01/01/2020 01:00   \n",
       "2      Barking and Dagenham  31.4  47.7  10.6  01/01/2020 02:00   \n",
       "3      Barking and Dagenham  30.0  51.5  14.1  01/01/2020 03:00   \n",
       "4      Barking and Dagenham  29.0  50.6  14.1  01/01/2020 04:00   \n",
       "...                     ...   ...   ...   ...               ...   \n",
       "35131                Sutton   NaN   NaN   NaN  31/12/2020 19:00   \n",
       "35132                Sutton   NaN   NaN   NaN  31/12/2020 20:00   \n",
       "35133                Sutton   NaN   NaN   NaN  31/12/2020 21:00   \n",
       "35134                Sutton   NaN   NaN   NaN  31/12/2020 22:00   \n",
       "35135                Sutton   NaN   NaN   NaN  31/12/2020 23:00   \n",
       "\n",
       "       Since_start_of_year  NO2_rolling_daily_mean  NOX_rolling_daily_mean  \\\n",
       "0                      0.0                     NaN                     NaN   \n",
       "1                      1.0                     NaN                     NaN   \n",
       "2                      2.0                     NaN                     NaN   \n",
       "3                      3.0                     NaN                     NaN   \n",
       "4                      4.0                     NaN                     NaN   \n",
       "...                    ...                     ...                     ...   \n",
       "35131               8779.0                     0.0                     0.0   \n",
       "35132               8780.0                     0.0                     0.0   \n",
       "35133               8781.0                     0.0                     0.0   \n",
       "35134               8782.0                     0.0                     0.0   \n",
       "35135               8783.0                     0.0                     0.0   \n",
       "\n",
       "       NO_rolling_daily_mean  NOX_rolling_daily_std  NO2_rolling_daily_std  \\\n",
       "0                        NaN                    NaN                    NaN   \n",
       "1                        NaN                    NaN                    NaN   \n",
       "2                        NaN                    NaN                    NaN   \n",
       "3                        NaN                    NaN                    NaN   \n",
       "4                        NaN                    NaN                    NaN   \n",
       "...                      ...                    ...                    ...   \n",
       "35131                    0.0                    0.0                    0.0   \n",
       "35132                    0.0                    0.0                    0.0   \n",
       "35133                    0.0                    0.0                    0.0   \n",
       "35134                    0.0                    0.0                    0.0   \n",
       "35135                    0.0                    0.0                    0.0   \n",
       "\n",
       "       NO_rolling_daily_std  \n",
       "0                       NaN  \n",
       "1                       NaN  \n",
       "2                       NaN  \n",
       "3                       NaN  \n",
       "4                       NaN  \n",
       "...                     ...  \n",
       "35131              0.000009  \n",
       "35132              0.000009  \n",
       "35133              0.000009  \n",
       "35134              0.000009  \n",
       "35135              0.000009  \n",
       "\n",
       "[35136 rows x 12 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Site                       object\n",
       "NO2                       float64\n",
       "NOX                       float64\n",
       "NO                        float64\n",
       "ReadingDateTime            object\n",
       "Since_start_of_year       float64\n",
       "NO2_rolling_daily_mean    float64\n",
       "NOX_rolling_daily_mean    float64\n",
       "NO_rolling_daily_mean     float64\n",
       "NOX_rolling_daily_std     float64\n",
       "NO2_rolling_daily_std     float64\n",
       "NO_rolling_daily_std      float64\n",
       "dtype: object"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Site</th>\n",
       "      <th>NO2</th>\n",
       "      <th>NOX</th>\n",
       "      <th>NO</th>\n",
       "      <th>ReadingDateTime</th>\n",
       "      <th>Since_start_of_year</th>\n",
       "      <th>NO2_rolling_daily_mean</th>\n",
       "      <th>NOX_rolling_daily_mean</th>\n",
       "      <th>NO_rolling_daily_mean</th>\n",
       "      <th>NOX_rolling_daily_std</th>\n",
       "      <th>NO2_rolling_daily_std</th>\n",
       "      <th>NO_rolling_daily_std</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1707</th>\n",
       "      <td>Barking and Dagenham</td>\n",
       "      <td>-3.8</td>\n",
       "      <td>2.8</td>\n",
       "      <td>4.3</td>\n",
       "      <td>12/03/2020 03:00</td>\n",
       "      <td>1707.0</td>\n",
       "      <td>5.333333</td>\n",
       "      <td>13.141667</td>\n",
       "      <td>5.091667</td>\n",
       "      <td>7.592154</td>\n",
       "      <td>6.094521</td>\n",
       "      <td>1.233559</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1706</th>\n",
       "      <td>Barking and Dagenham</td>\n",
       "      <td>-2.7</td>\n",
       "      <td>3.9</td>\n",
       "      <td>4.3</td>\n",
       "      <td>12/03/2020 02:00</td>\n",
       "      <td>1706.0</td>\n",
       "      <td>5.450000</td>\n",
       "      <td>13.258333</td>\n",
       "      <td>5.091667</td>\n",
       "      <td>7.446442</td>\n",
       "      <td>5.936841</td>\n",
       "      <td>1.233559</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1705</th>\n",
       "      <td>Barking and Dagenham</td>\n",
       "      <td>-2.1</td>\n",
       "      <td>4.5</td>\n",
       "      <td>4.3</td>\n",
       "      <td>12/03/2020 01:00</td>\n",
       "      <td>1705.0</td>\n",
       "      <td>5.500000</td>\n",
       "      <td>13.308333</td>\n",
       "      <td>5.091667</td>\n",
       "      <td>7.384644</td>\n",
       "      <td>5.869894</td>\n",
       "      <td>1.233559</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1708</th>\n",
       "      <td>Barking and Dagenham</td>\n",
       "      <td>-1.5</td>\n",
       "      <td>5.1</td>\n",
       "      <td>4.3</td>\n",
       "      <td>12/03/2020 04:00</td>\n",
       "      <td>1708.0</td>\n",
       "      <td>5.216667</td>\n",
       "      <td>13.025000</td>\n",
       "      <td>5.091667</td>\n",
       "      <td>7.696993</td>\n",
       "      <td>6.200958</td>\n",
       "      <td>1.233559</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1682</th>\n",
       "      <td>Barking and Dagenham</td>\n",
       "      <td>-1.5</td>\n",
       "      <td>5.1</td>\n",
       "      <td>4.3</td>\n",
       "      <td>11/03/2020 02:00</td>\n",
       "      <td>1682.0</td>\n",
       "      <td>6.950000</td>\n",
       "      <td>12.833333</td>\n",
       "      <td>3.841667</td>\n",
       "      <td>5.047485</td>\n",
       "      <td>4.421587</td>\n",
       "      <td>1.589618</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                      Site  NO2  NOX   NO   ReadingDateTime  \\\n",
       "1707  Barking and Dagenham -3.8  2.8  4.3  12/03/2020 03:00   \n",
       "1706  Barking and Dagenham -2.7  3.9  4.3  12/03/2020 02:00   \n",
       "1705  Barking and Dagenham -2.1  4.5  4.3  12/03/2020 01:00   \n",
       "1708  Barking and Dagenham -1.5  5.1  4.3  12/03/2020 04:00   \n",
       "1682  Barking and Dagenham -1.5  5.1  4.3  11/03/2020 02:00   \n",
       "\n",
       "      Since_start_of_year  NO2_rolling_daily_mean  NOX_rolling_daily_mean  \\\n",
       "1707               1707.0                5.333333               13.141667   \n",
       "1706               1706.0                5.450000               13.258333   \n",
       "1705               1705.0                5.500000               13.308333   \n",
       "1708               1708.0                5.216667               13.025000   \n",
       "1682               1682.0                6.950000               12.833333   \n",
       "\n",
       "      NO_rolling_daily_mean  NOX_rolling_daily_std  NO2_rolling_daily_std  \\\n",
       "1707               5.091667               7.592154               6.094521   \n",
       "1706               5.091667               7.446442               5.936841   \n",
       "1705               5.091667               7.384644               5.869894   \n",
       "1708               5.091667               7.696993               6.200958   \n",
       "1682               3.841667               5.047485               4.421587   \n",
       "\n",
       "      NO_rolling_daily_std  \n",
       "1707              1.233559  \n",
       "1706              1.233559  \n",
       "1705              1.233559  \n",
       "1708              1.233559  \n",
       "1682              1.589618  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.sort_values(by='NO2', ascending=True)[:5]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Site</th>\n",
       "      <th>NO2</th>\n",
       "      <th>NOX</th>\n",
       "      <th>NO</th>\n",
       "      <th>ReadingDateTime</th>\n",
       "      <th>Since_start_of_year</th>\n",
       "      <th>NO2_rolling_daily_mean</th>\n",
       "      <th>NOX_rolling_daily_mean</th>\n",
       "      <th>NO_rolling_daily_mean</th>\n",
       "      <th>NOX_rolling_daily_std</th>\n",
       "      <th>NO2_rolling_daily_std</th>\n",
       "      <th>NO_rolling_daily_std</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>12506</th>\n",
       "      <td>Hackney</td>\n",
       "      <td>-0.3</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>-0.4</td>\n",
       "      <td>04/06/2020 02:00</td>\n",
       "      <td>3722.0</td>\n",
       "      <td>18.679167</td>\n",
       "      <td>26.845833</td>\n",
       "      <td>5.316667</td>\n",
       "      <td>26.675326</td>\n",
       "      <td>17.206015</td>\n",
       "      <td>7.097622</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12505</th>\n",
       "      <td>Hackney</td>\n",
       "      <td>-1.2</td>\n",
       "      <td>-0.4</td>\n",
       "      <td>0.5</td>\n",
       "      <td>04/06/2020 01:00</td>\n",
       "      <td>3721.0</td>\n",
       "      <td>20.683333</td>\n",
       "      <td>28.945833</td>\n",
       "      <td>5.375000</td>\n",
       "      <td>26.369976</td>\n",
       "      <td>17.693641</td>\n",
       "      <td>7.054216</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5785</th>\n",
       "      <td>Barking and Dagenham</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>29/08/2020 01:00</td>\n",
       "      <td>5785.0</td>\n",
       "      <td>8.829167</td>\n",
       "      <td>12.270833</td>\n",
       "      <td>2.245833</td>\n",
       "      <td>7.914240</td>\n",
       "      <td>4.701293</td>\n",
       "      <td>2.355563</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>268</th>\n",
       "      <td>Barking and Dagenham</td>\n",
       "      <td>-1.1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.7</td>\n",
       "      <td>12/01/2020 04:00</td>\n",
       "      <td>268.0</td>\n",
       "      <td>4.291667</td>\n",
       "      <td>5.904167</td>\n",
       "      <td>1.050000</td>\n",
       "      <td>3.590504</td>\n",
       "      <td>3.031274</td>\n",
       "      <td>0.503034</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5569</th>\n",
       "      <td>Barking and Dagenham</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>20/08/2020 01:00</td>\n",
       "      <td>5569.0</td>\n",
       "      <td>9.870833</td>\n",
       "      <td>12.420833</td>\n",
       "      <td>1.666667</td>\n",
       "      <td>6.496754</td>\n",
       "      <td>4.143143</td>\n",
       "      <td>1.889713</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                       Site  NO2  NOX   NO   ReadingDateTime  \\\n",
       "12506               Hackney -0.3 -1.0 -0.4  04/06/2020 02:00   \n",
       "12505               Hackney -1.2 -0.4  0.5  04/06/2020 01:00   \n",
       "5785   Barking and Dagenham  0.0  0.0  0.0  29/08/2020 01:00   \n",
       "268    Barking and Dagenham -1.1  0.0  0.7  12/01/2020 04:00   \n",
       "5569   Barking and Dagenham  0.0  0.0  0.0  20/08/2020 01:00   \n",
       "\n",
       "       Since_start_of_year  NO2_rolling_daily_mean  NOX_rolling_daily_mean  \\\n",
       "12506               3722.0               18.679167               26.845833   \n",
       "12505               3721.0               20.683333               28.945833   \n",
       "5785                5785.0                8.829167               12.270833   \n",
       "268                  268.0                4.291667                5.904167   \n",
       "5569                5569.0                9.870833               12.420833   \n",
       "\n",
       "       NO_rolling_daily_mean  NOX_rolling_daily_std  NO2_rolling_daily_std  \\\n",
       "12506               5.316667              26.675326              17.206015   \n",
       "12505               5.375000              26.369976              17.693641   \n",
       "5785                2.245833               7.914240               4.701293   \n",
       "268                 1.050000               3.590504               3.031274   \n",
       "5569                1.666667               6.496754               4.143143   \n",
       "\n",
       "       NO_rolling_daily_std  \n",
       "12506              7.097622  \n",
       "12505              7.054216  \n",
       "5785               2.355563  \n",
       "268                0.503034  \n",
       "5569               1.889713  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.sort_values(by='NOX', ascending=True)[:5]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Site</th>\n",
       "      <th>NO2</th>\n",
       "      <th>NOX</th>\n",
       "      <th>NO</th>\n",
       "      <th>ReadingDateTime</th>\n",
       "      <th>Since_start_of_year</th>\n",
       "      <th>NO2_rolling_daily_mean</th>\n",
       "      <th>NOX_rolling_daily_mean</th>\n",
       "      <th>NO_rolling_daily_mean</th>\n",
       "      <th>NOX_rolling_daily_std</th>\n",
       "      <th>NO2_rolling_daily_std</th>\n",
       "      <th>NO_rolling_daily_std</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>32570</th>\n",
       "      <td>Sutton</td>\n",
       "      <td>31.9</td>\n",
       "      <td>29.3</td>\n",
       "      <td>-1.7</td>\n",
       "      <td>16/09/2020 02:00</td>\n",
       "      <td>6218.0</td>\n",
       "      <td>75.591667</td>\n",
       "      <td>118.829167</td>\n",
       "      <td>28.191667</td>\n",
       "      <td>50.750210</td>\n",
       "      <td>24.186772</td>\n",
       "      <td>20.961744</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11067</th>\n",
       "      <td>Hackney</td>\n",
       "      <td>13.0</td>\n",
       "      <td>10.5</td>\n",
       "      <td>-1.6</td>\n",
       "      <td>05/04/2020 03:00</td>\n",
       "      <td>2283.0</td>\n",
       "      <td>23.658333</td>\n",
       "      <td>27.804167</td>\n",
       "      <td>2.733333</td>\n",
       "      <td>18.197957</td>\n",
       "      <td>15.815565</td>\n",
       "      <td>3.348285</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17762</th>\n",
       "      <td>Lewisham</td>\n",
       "      <td>4.5</td>\n",
       "      <td>2.3</td>\n",
       "      <td>-1.5</td>\n",
       "      <td>09/01/2020 02:00</td>\n",
       "      <td>194.0</td>\n",
       "      <td>42.308333</td>\n",
       "      <td>84.804166</td>\n",
       "      <td>27.716667</td>\n",
       "      <td>60.511978</td>\n",
       "      <td>22.657889</td>\n",
       "      <td>26.873725</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17763</th>\n",
       "      <td>Lewisham</td>\n",
       "      <td>4.0</td>\n",
       "      <td>1.7</td>\n",
       "      <td>-1.5</td>\n",
       "      <td>09/01/2020 03:00</td>\n",
       "      <td>195.0</td>\n",
       "      <td>42.220833</td>\n",
       "      <td>84.608333</td>\n",
       "      <td>27.645833</td>\n",
       "      <td>60.783742</td>\n",
       "      <td>22.807359</td>\n",
       "      <td>26.951534</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17761</th>\n",
       "      <td>Lewisham</td>\n",
       "      <td>6.9</td>\n",
       "      <td>4.6</td>\n",
       "      <td>-1.4</td>\n",
       "      <td>09/01/2020 01:00</td>\n",
       "      <td>193.0</td>\n",
       "      <td>42.420833</td>\n",
       "      <td>85.020833</td>\n",
       "      <td>27.787500</td>\n",
       "      <td>60.212290</td>\n",
       "      <td>22.467909</td>\n",
       "      <td>26.795495</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           Site   NO2   NOX   NO   ReadingDateTime  Since_start_of_year  \\\n",
       "32570    Sutton  31.9  29.3 -1.7  16/09/2020 02:00               6218.0   \n",
       "11067   Hackney  13.0  10.5 -1.6  05/04/2020 03:00               2283.0   \n",
       "17762  Lewisham   4.5   2.3 -1.5  09/01/2020 02:00                194.0   \n",
       "17763  Lewisham   4.0   1.7 -1.5  09/01/2020 03:00                195.0   \n",
       "17761  Lewisham   6.9   4.6 -1.4  09/01/2020 01:00                193.0   \n",
       "\n",
       "       NO2_rolling_daily_mean  NOX_rolling_daily_mean  NO_rolling_daily_mean  \\\n",
       "32570               75.591667              118.829167              28.191667   \n",
       "11067               23.658333               27.804167               2.733333   \n",
       "17762               42.308333               84.804166              27.716667   \n",
       "17763               42.220833               84.608333              27.645833   \n",
       "17761               42.420833               85.020833              27.787500   \n",
       "\n",
       "       NOX_rolling_daily_std  NO2_rolling_daily_std  NO_rolling_daily_std  \n",
       "32570              50.750210              24.186772             20.961744  \n",
       "11067              18.197957              15.815565              3.348285  \n",
       "17762              60.511978              22.657889             26.873725  \n",
       "17763              60.783742              22.807359             26.951534  \n",
       "17761              60.212290              22.467909             26.795495  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.sort_values(by='NO', ascending=True)[:5]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "from sklearn import preprocessing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Site                      1.000000\n",
       "NO2                       0.962346\n",
       "NOX                       0.962432\n",
       "NO                        0.962432\n",
       "ReadingDateTime           1.000000\n",
       "Since_start_of_year       1.000000\n",
       "NO2_rolling_daily_mean    0.999345\n",
       "NOX_rolling_daily_mean    0.999345\n",
       "NO_rolling_daily_mean     0.999345\n",
       "NOX_rolling_daily_std     0.999345\n",
       "NO2_rolling_daily_std     0.999345\n",
       "NO_rolling_daily_std      0.999345\n",
       "dtype: float64"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.count()/ len(data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Site</th>\n",
       "      <th>NO2</th>\n",
       "      <th>NOX</th>\n",
       "      <th>NO</th>\n",
       "      <th>ReadingDateTime</th>\n",
       "      <th>Since_start_of_year</th>\n",
       "      <th>NO2_rolling_daily_mean</th>\n",
       "      <th>NOX_rolling_daily_mean</th>\n",
       "      <th>NO_rolling_daily_mean</th>\n",
       "      <th>NOX_rolling_daily_std</th>\n",
       "      <th>NO2_rolling_daily_std</th>\n",
       "      <th>NO_rolling_daily_std</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1323</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>1323</td>\n",
       "      <td>1323.000000</td>\n",
       "      <td>1322.000000</td>\n",
       "      <td>1322.000000</td>\n",
       "      <td>1322.000000</td>\n",
       "      <td>1322.000000</td>\n",
       "      <td>1322.000000</td>\n",
       "      <td>1322.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>unique</th>\n",
       "      <td>4</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1146</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>top</th>\n",
       "      <td>Sutton</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>31/12/2020 11:00</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>freq</th>\n",
       "      <td>805</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>72.133333</td>\n",
       "      <td>25.033333</td>\n",
       "      <td>NaN</td>\n",
       "      <td>7157.042328</td>\n",
       "      <td>5.359871</td>\n",
       "      <td>10.550788</td>\n",
       "      <td>3.391635</td>\n",
       "      <td>8.802223</td>\n",
       "      <td>4.134751</td>\n",
       "      <td>3.265517</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>9.654705</td>\n",
       "      <td>12.482121</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2244.409161</td>\n",
       "      <td>14.486692</td>\n",
       "      <td>30.894980</td>\n",
       "      <td>11.871130</td>\n",
       "      <td>23.978345</td>\n",
       "      <td>10.651700</td>\n",
       "      <td>9.919540</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>61.000000</td>\n",
       "      <td>13.100000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>69.100000</td>\n",
       "      <td>18.550000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5570.500000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000009</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>77.200000</td>\n",
       "      <td>24.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>8293.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000009</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>77.700000</td>\n",
       "      <td>31.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>8595.500000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000002</td>\n",
       "      <td>0.000009</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>78.200000</td>\n",
       "      <td>38.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>8783.000000</td>\n",
       "      <td>117.524999</td>\n",
       "      <td>277.983336</td>\n",
       "      <td>137.141666</td>\n",
       "      <td>150.318664</td>\n",
       "      <td>75.508732</td>\n",
       "      <td>79.927558</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Site  NO2        NOX         NO   ReadingDateTime  \\\n",
       "count     1323  0.0   3.000000   3.000000              1323   \n",
       "unique       4  NaN        NaN        NaN              1146   \n",
       "top     Sutton  NaN        NaN        NaN  31/12/2020 11:00   \n",
       "freq       805  NaN        NaN        NaN                 2   \n",
       "mean       NaN  NaN  72.133333  25.033333               NaN   \n",
       "std        NaN  NaN   9.654705  12.482121               NaN   \n",
       "min        NaN  NaN  61.000000  13.100000               NaN   \n",
       "25%        NaN  NaN  69.100000  18.550000               NaN   \n",
       "50%        NaN  NaN  77.200000  24.000000               NaN   \n",
       "75%        NaN  NaN  77.700000  31.000000               NaN   \n",
       "max        NaN  NaN  78.200000  38.000000               NaN   \n",
       "\n",
       "        Since_start_of_year  NO2_rolling_daily_mean  NOX_rolling_daily_mean  \\\n",
       "count           1323.000000             1322.000000             1322.000000   \n",
       "unique                  NaN                     NaN                     NaN   \n",
       "top                     NaN                     NaN                     NaN   \n",
       "freq                    NaN                     NaN                     NaN   \n",
       "mean            7157.042328                5.359871               10.550788   \n",
       "std             2244.409161               14.486692               30.894980   \n",
       "min                0.000000                0.000000                0.000000   \n",
       "25%             5570.500000                0.000000                0.000000   \n",
       "50%             8293.000000                0.000000                0.000000   \n",
       "75%             8595.500000                0.000000                0.000000   \n",
       "max             8783.000000              117.524999              277.983336   \n",
       "\n",
       "        NO_rolling_daily_mean  NOX_rolling_daily_std  NO2_rolling_daily_std  \\\n",
       "count             1322.000000            1322.000000            1322.000000   \n",
       "unique                    NaN                    NaN                    NaN   \n",
       "top                       NaN                    NaN                    NaN   \n",
       "freq                      NaN                    NaN                    NaN   \n",
       "mean                 3.391635               8.802223               4.134751   \n",
       "std                 11.871130              23.978345              10.651700   \n",
       "min                  0.000000               0.000000               0.000000   \n",
       "25%                  0.000000               0.000000               0.000000   \n",
       "50%                  0.000000               0.000000               0.000000   \n",
       "75%                  0.000000               0.000000               0.000002   \n",
       "max                137.141666             150.318664              75.508732   \n",
       "\n",
       "        NO_rolling_daily_std  \n",
       "count            1322.000000  \n",
       "unique                   NaN  \n",
       "top                      NaN  \n",
       "freq                     NaN  \n",
       "mean                3.265517  \n",
       "std                 9.919540  \n",
       "min                 0.000000  \n",
       "25%                 0.000009  \n",
       "50%                 0.000009  \n",
       "75%                 0.000009  \n",
       "max                79.927558  "
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data[data[\"NO2\"].isna()]\n",
    "data[data[\"NO2\"].isna()].describe(include=\"all\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>NO2</th>\n",
       "      <th>NOX</th>\n",
       "      <th>NO</th>\n",
       "      <th>Since_start_of_year</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>31.8</td>\n",
       "      <td>42</td>\n",
       "      <td>6.7</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>31.4</td>\n",
       "      <td>47.7</td>\n",
       "      <td>10.6</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>30</td>\n",
       "      <td>51.5</td>\n",
       "      <td>14.1</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>29</td>\n",
       "      <td>50.6</td>\n",
       "      <td>14.1</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35131</th>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "      <td>8779.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35132</th>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "      <td>8780.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35133</th>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "      <td>8781.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35134</th>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "      <td>8782.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35135</th>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "      <td>8783.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>35136 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           NO2      NOX       NO  Since_start_of_year\n",
       "0      unknown  unknown  unknown                  0.0\n",
       "1         31.8       42      6.7                  1.0\n",
       "2         31.4     47.7     10.6                  2.0\n",
       "3           30     51.5     14.1                  3.0\n",
       "4           29     50.6     14.1                  4.0\n",
       "...        ...      ...      ...                  ...\n",
       "35131  unknown  unknown  unknown               8779.0\n",
       "35132  unknown  unknown  unknown               8780.0\n",
       "35133  unknown  unknown  unknown               8781.0\n",
       "35134  unknown  unknown  unknown               8782.0\n",
       "35135  unknown  unknown  unknown               8783.0\n",
       "\n",
       "[35136 rows x 4 columns]"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data[[\"NO2\",\"NOX\",\"NO\",\"Since_start_of_year\"]].fillna(\"unknown\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>NO2_rolling_daily_mean</th>\n",
       "      <th>NOX_rolling_daily_mean</th>\n",
       "      <th>NO_rolling_daily_mean</th>\n",
       "      <th>NOX_rolling_daily_std</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35131</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35132</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35133</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35134</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35135</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>35136 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      NO2_rolling_daily_mean NOX_rolling_daily_mean NO_rolling_daily_mean  \\\n",
       "0                    unknown                unknown               unknown   \n",
       "1                    unknown                unknown               unknown   \n",
       "2                    unknown                unknown               unknown   \n",
       "3                    unknown                unknown               unknown   \n",
       "4                    unknown                unknown               unknown   \n",
       "...                      ...                    ...                   ...   \n",
       "35131                      0                      0                     0   \n",
       "35132                      0                      0                     0   \n",
       "35133                      0                      0                     0   \n",
       "35134                      0                      0                     0   \n",
       "35135                      0                      0                     0   \n",
       "\n",
       "      NOX_rolling_daily_std  \n",
       "0                   unknown  \n",
       "1                   unknown  \n",
       "2                   unknown  \n",
       "3                   unknown  \n",
       "4                   unknown  \n",
       "...                     ...  \n",
       "35131                     0  \n",
       "35132                     0  \n",
       "35133                     0  \n",
       "35134                     0  \n",
       "35135                     0  \n",
       "\n",
       "[35136 rows x 4 columns]"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data[[\"NO2_rolling_daily_mean\",\"NOX_rolling_daily_mean\",\"NO_rolling_daily_mean\",\"NOX_rolling_daily_std\"]].fillna(\"unknown\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>NO2_rolling_daily_std</th>\n",
       "      <th>NO_rolling_daily_std</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35131</th>\n",
       "      <td>0</td>\n",
       "      <td>9.26437e-06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35132</th>\n",
       "      <td>0</td>\n",
       "      <td>9.26437e-06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35133</th>\n",
       "      <td>0</td>\n",
       "      <td>9.26437e-06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35134</th>\n",
       "      <td>0</td>\n",
       "      <td>9.26437e-06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35135</th>\n",
       "      <td>0</td>\n",
       "      <td>9.26437e-06</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>35136 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      NO2_rolling_daily_std NO_rolling_daily_std\n",
       "0                   unknown              unknown\n",
       "1                   unknown              unknown\n",
       "2                   unknown              unknown\n",
       "3                   unknown              unknown\n",
       "4                   unknown              unknown\n",
       "...                     ...                  ...\n",
       "35131                     0          9.26437e-06\n",
       "35132                     0          9.26437e-06\n",
       "35133                     0          9.26437e-06\n",
       "35134                     0          9.26437e-06\n",
       "35135                     0          9.26437e-06\n",
       "\n",
       "[35136 rows x 2 columns]"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data[[\"NO2_rolling_daily_std\",\"NO_rolling_daily_std\"]].fillna(\"unknown\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd \n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.decomposition import PCA\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.decomposition import PCA"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [],
   "source": [
    "x = StandardScaler().fit_transform(x)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [],
   "source": [
    "pca = PCA(n_components=2)\n",
    "x_2d = pca.fit_transform(x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(8, 8))\n",
    "a = plt.plot(x_2d[:,0],x_2d[:,1],\"bx\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [],
   "source": [
    "def plot_data(X):\n",
    "    plt.plot(X[:, 0], X[:, 1], 'k.', markersize=2)\n",
    "\n",
    "def plot_centroids(centroids, weights=None, circle_color='r', cross_color='k'):\n",
    "    if weights is not None:\n",
    "        centroids = centroids[weights > weights.max() / 10]\n",
    "    plt.scatter(centroids[:, 0], centroids[:, 1],\n",
    "                marker='o', s=35, linewidths=8,\n",
    "                color=circle_color, zorder=10, alpha=0.9)\n",
    "    plt.scatter(centroids[:, 0], centroids[:, 1],\n",
    "                marker='x', s=2, linewidths=12,\n",
    "                color=cross_color, zorder=11, alpha=1)\n",
    "\n",
    "def plot_clusters(clusterer, X):\n",
    "    labels = clusterer.predict(X)\n",
    "    pca = PCA(n_components=2)\n",
    "    x_2d = pca.fit_transform(X)\n",
    "    plt.scatter(x_2d[:, 0], x_2d[:, 1], c=labels, alpha=0.3)\n",
    "    plot_centroids(clusterer.cluster_centers_)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x14625d700>]"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "scores=[]\n",
    "for i in range(1,20):\n",
    "    #Fit for k\n",
    "    means=KMeans(n_clusters=i)\n",
    "    means.fit(x)\n",
    "    #Get inertia\n",
    "    scores.append(means.inertia_)\n",
    "plt.plot(scores,\"-rx\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "k = 3\n",
    "kmeans = KMeans(n_clusters=k, random_state=42)\n",
    "kmeans.fit(x)\n",
    "plt.figure(figsize=(8, 8))\n",
    "#Plot clusters onto PCA reduced plot\n",
    "plot_clusters(kmeans, x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
